
$font-sizes: (
    sm: 12, //12px 
    md: 13, //13px
    lg: 14, //14px
    xl: 16, //16px,
    xxl:18, //18px
    xxxl:22 //18px
);
$font-weights: (
    xs:300,
    sm: 400, 
    md: 500, 
    lg: 600, 
    xl: 700, 

);
$flex-jc: (start: flex-start, end: flex-end, center: center, between: space-between, around: space-around, );
$flex-ai: (start: flex-start, end: flex-end, center: center, stretch: stretch, );
// spacing
// 0-5: 0
// .mt-1 => margin top .pb-2
$spacing-types: (m: margin, p: padding, );
$spacing-directions: (t: top, r: right, b: bottom, l: left, );
// $spacing-base-size: 1rem;
$spacing-base-size: 10px;

$spacing-sizes: (0: 0, 1: 0.25, 2: 0.5, 3: 1, 4: 1.5, 5: 3, 6: 3.5);

// text align
@each $var in (left,
    center,
    right) {
    .text-#{$var} {
        text-align: $var !important;
    }
}

@each $sizeKey,
$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size + px;
    }
}


@each $weightKey,
$weight in $font-weights {
    .fw-#{$weightKey} {
        font-weight: $weight;
    }
}

// text overflow
.text-ellipsis {
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// width, height
.w-100 {
    width: 100%;
}
.w-75 {
    width: 75%;
}
.w-50 {
    width: 50%;
}
.w-25 {
    width: 25%;
}
.w-10 {
    width: 10%;
}
.h-100 {
    height: 100%;
}

// flex
.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

@each $key,
$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

@each $key,
$value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex: 1;
}

.flex-grow-1 {
    flex-grow: 1;
}


// m-0, mx-0
@each $typeKey,
$type in $spacing-types {

    // .m-1
    @each $sizeKey,
    $size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size;
        }
    }

    // .mx-1 , .my-1
    @each $sizeKey,
    $size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size;
        }

        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size;
        }
    }

    // .mt-1
    @each $directionKey,
    $direction in $spacing-directions {

        @each $sizeKey,
        $size in $spacing-sizes {
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
        }
    }

      // .ml-a
      @each $directionKey,
      $direction in $spacing-directions {
  
          @each $sizeKey,
          $size in $spacing-sizes {
              .#{$typeKey}#{$directionKey}-a {
                  #{$type}-#{$direction}: auto !important;
              }
          }
      }
  
}


// borders
@each $dir in (top,
    right,
    bottom,
    left) {
    .border-#{$dir} {
        border-#{$dir}: 1px solid transparent;
        &.default{
            border-color:  #E5E5E5;
        }
    }
}

.mu-cus{
    cursor: pointer;
}

.mu-relative{
    position: relative;
}
.mu-absolute{
    position: absolute;
}
.mu-absolute-center{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}
